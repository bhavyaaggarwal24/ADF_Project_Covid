{
	"name": "confirmed_cases_file_transformation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "raw_cases_deaths",
						"type": "DatasetReference"
					},
					"name": "casesdeathsrawfile"
				},
				{
					"dataset": {
						"referenceName": "lookup_country_data",
						"type": "DatasetReference"
					},
					"name": "lookupcountrydata"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "proccessed",
						"type": "LinkedServiceReference"
					},
					"name": "processedcasesdeaths",
					"rejectedDataLinkedService": {
						"referenceName": "proccessed",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "lookupcountrycode"
				},
				{
					"name": "selectneededcolumns"
				},
				{
					"name": "filtercontinent"
				},
				{
					"name": "indicatorsegregation"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code as string,",
				"          continent as string,",
				"          population as string,",
				"          indicator as string,",
				"          daily_count as string,",
				"          date as date,",
				"          rate_14_day as string,",
				"          source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> casesdeathsrawfile",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> lookupcountrydata",
				"filtercontinent, lookupcountrydata lookup(country_code == country_code_3_digit,",
				"     multiple: true,",
				"     partitionBy('hash', 1),",
				"     broadcast: 'auto')~> lookupcountrycode",
				"lookupcountrycode select(mapColumn(",
				"          country = casesdeathsrawfile@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          indicator,",
				"          date",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectneededcolumns",
				"casesdeathsrawfile filter(continent==\"Asia\",",
				"     partitionBy('hash', 1)) ~> filtercontinent",
				"selectneededcolumns pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          date),",
				"     pivotBy(indicator, ['confirmed_cases', 'deaths']),",
				"     count = count(indicator),",
				"     columnNaming: '$V$N',",
				"     lateral: true,",
				"     partitionBy('hash', 1)) ~> indicatorsegregation",
				"indicatorsegregation sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     fileSystem: 'proccessed',",
				"     folderPath: 'cases_deaths',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> processedcasesdeaths"
			]
		}
	}
}